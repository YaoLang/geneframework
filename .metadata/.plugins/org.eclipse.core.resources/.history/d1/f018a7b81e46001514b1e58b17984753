package org.geneframework.orm.util;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;

import org.geneframework.orm.matrix.Table;
/**
 * Util to r&w table in csv file
 * 
 * @author kong
 *
 */
public class CsvUtil implements TableReader{
	
	private String split = null;
	
	/**
	 * 
	 * @param split
	 * separate symbol of the csv table
	 */
	public CsvUtil(String split){
		this.split = split;
	}
	
	@Override
	public Table readTable(String filePath,boolean Ctaintopic) {
		BufferedReader bf = null;
        String message;
        String[] topic = null;
        String[][] record = new String[100][];
        ArrayList<String[]> records = new ArrayList<String[]>();

        Table data = null;
        if(filePath.endsWith(".csv")){
            try {
                bf = new BufferedReader(new FileReader(new File(filePath)));
                int i = 0;
                while((message=bf.readLine())!=null){
                    String[] sp = message.split(split);
                    if(i==0&&Ctaintopic==true)
                        topic = sp;
                    else
                        records.add(sp);
                    i++;
                }
                record = new String[records.size()][];
                for (int j = 0; j < record.length; j++) {
                    record[j] = records.get(j);
                }
                if(Ctaintopic!=true)
                	data = new Table(record);
                else
                	data = new Table(topic,record);
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            }finally {
                if(bf!=null)
                    try {
                        bf.close();
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
            }
        }
        return data;
	}

	@Override
	public void writeTable(Table target, String filePath) {
		BufferedWriter bw = null;
    	try {
			bw = new BufferedWriter(new FileWriter(new File(filePath)));
			String[] topic = target.getTopic();
			String[][] datas = target.getRecords();
			int row = topic.length;
			int col = datas.length;
			StringBuffer sb = new StringBuffer();
			for(int i = 0 ; i < topic.length ; i ++){
				sb.append(topic[i]);
				if(i!=topic.length-1)
					sb.append(split);
			}
			bw.write(sb.toString()+"\n");
			for(int i = 0 ; i < col ; i ++){
				sb = new StringBuffer();
				for(int j = 0 ; j < row ; j ++){
					sb.append(datas[i][j]);
					if(j!=row-1)
						sb.append(split);
				}
				bw.write(sb.toString()+"\n");
				if(i%20==0)
					bw.flush();
			}
			bw.flush();
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}finally{
			try {
				bw.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		
	}

	@Override
	public String[] getSuffix() {
		String[] suffixs = {"csv"};
		return suffixs;
	}

}
